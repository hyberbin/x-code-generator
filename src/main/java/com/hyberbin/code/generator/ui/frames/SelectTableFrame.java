/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hyberbin.code.generator.ui.frames;

import com.google.inject.Inject;
import com.hyberbin.code.generator.dao.SqliteDao;
import com.hyberbin.code.generator.domains.ClassModelMeta;
import com.hyberbin.code.generator.domains.DataSource;
import com.hyberbin.code.generator.domains.TableMeta;
import com.hyberbin.code.generator.ui.model.SelectTableModel;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import org.jplus.hyb.database.config.DbConfig;
import org.jplus.hyb.database.config.SimpleConfigurator;

/**
 * @author Administrator
 */
public class SelectTableFrame extends javax.swing.JFrame {

    private SqliteDao sqliteDao;

    /**
     * Creates new form SelectTableFrame
     */
    @Inject
    public SelectTableFrame(SqliteDao sqliteDao) {
        this.sqliteDao = sqliteDao;
        initComponents();
        loadAllDataSource();
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        int x = (int) (toolkit.getScreenSize().getWidth() - getWidth()) / 2;
        int y = (int) (toolkit.getScreenSize().getHeight() - getHeight()) / 2;
        setLocation(x, y);
        jTable2.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
    }

    private void loadTableMetas(String tableName) {
        DataSource datasource = sqliteDao
                .getOne(DataSource.class, "datasource", datasources.getSelectedItem().toString());
        if (datasource != null) {
            SimpleConfigurator.addConfigurator(
                    new DbConfig(datasource.getUrl(), datasource.getUsername(), datasource.getPassword(),
                            datasource.getDatasource()));
            SelectTableModel selectTableModel = getModel();
            selectTableModel.clearData();
            List<TableMeta> tableMetas = sqliteDao.getTableMetas(datasource.getDatasource(), tableName);
            List<ClassModelMeta> classModelMetas = sqliteDao.getList(ClassModelMeta.class, "dbName",
                    sqliteDao.getDbName(datasource.getDatasource()));
            Map<String, ClassModelMeta> classModelMetaMap = new HashMap<>();
            for (ClassModelMeta meta : classModelMetas) {
                classModelMetaMap.put(meta.getTableName(), meta);
            }
            for (TableMeta tableMeta : tableMetas) {
                ClassModelMeta modelMeta = new ClassModelMeta(tableMeta);
                ClassModelMeta fromDb = classModelMetaMap.get(modelMeta.getTableName());
                if (fromDb != null) {
                    selectTableModel.addRow(fromDb);
                } else {
                    selectTableModel.addRow(modelMeta);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        datasources = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tableName = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable2.setModel(new SelectTableModel());
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jTable2);

        jButton1.setText("下一步");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        datasources.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                datasourcesItemStateChanged(evt);
            }
        });

        jLabel1.setText("数据源");

        jButton2.setText("保存");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("表名");

        searchButton.setText("查询");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(247, 247, 247)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableName, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton)
                .addContainerGap(186, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(53, 53, 53))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(datasources, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tableName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addGap(21, 399, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(datasources, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(52, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void datasourcesItemStateChanged(
            java.awt.event.ItemEvent evt) {//GEN-FIRST:event_datasourcesItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            loadTableMetas(tableName.getText());
        }
  }//GEN-LAST:event_datasourcesItemStateChanged

    private void jButton2ActionPerformed(
            java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        getModel().save();
        List<ClassModelMeta> datas = getModel().getDatas();
        for (ClassModelMeta classModelMeta : datas) {
            sqliteDao.saveDO(classModelMeta);
        }
  }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(
            java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        new SelectColumnFrame(getModel().getSelectedTables(), 0,
                datasources.getSelectedItem().toString()).setVisible(true);
        this.dispose();
  }//GEN-LAST:event_jButton1ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        loadTableMetas(tableName.getText());
    }//GEN-LAST:event_searchButtonActionPerformed

    private void loadAllDataSource() {
        List<DataSource> all = sqliteDao.getAll(DataSource.class);
        DefaultComboBoxModel model = (DefaultComboBoxModel) datasources.getModel();
        model.removeAllElements();
        for (DataSource source : all) {
            model.addElement(source.getDatasource());
        }
    }

    private SelectTableModel getModel() {
        return (SelectTableModel) jTable2.getModel();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> datasources;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField tableName;
    // End of variables declaration//GEN-END:variables
}
